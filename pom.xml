<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.phylotastic</groupId>
  <artifactId>MapReducePrune</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <properties> <project.mainclass>org.phylotastic.mapreducepruner.MapReducePruner</project.mainclass>
    <file.encoding>UTF-8</file.encoding>
    <hadoop.version>2.4.0.2.1.1.0-385</hadoop.version>
  </properties>
  
  <build>
	<sourceDirectory>src</sourceDirectory>
	<plugins>
      
	  <!--This plugin is used to compile the sources of your project -->
	  <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>7</source>
          <target>7</target>
          <encoding>${file.encoding}</encoding>
        </configuration>
      </plugin>
      
	  <!--Both the Maven jar plugin as the maven shade plugin are used for creating 
	  a jar of the program-->
	  <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>${project.mainclass}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
	 
      <!--Both the Maven jar plugin as the maven shade plugin are used for creating 
	  a jar of the program-->
	  <plugin>
        <artifactId>maven-shade-plugin</artifactId>
	    <version>2.3</version>
        <configuration>
          <createDependencyReducedPom>false</createDependencyReducedPom>
          <filters>
          <filter>
          <artifact>*:*</artifact>
          <excludes>
          <exclude>META-INF/*.SF</exclude>
          <exclude>META-INF/*.DSA</exclude>
          <exclude>META-INF/*.RSA</exclude>
          </excludes>
          </filter> 
          </filters>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
     
	  <!--The Resources Plugin handles the copying of project resources to the output 
	  directory. There are two different kinds of resources: main resources and test 
	  resources. The difference is that the main resources are the resources associated 
	  to the main source code while the test resources are associated to the test source 
	  code. Thus, this allows the separation of resources for the main source code and 
	  its unit tests.-->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <encoding>${file.encoding}</encoding>
        </configuration>
      </plugin>
 	</plugins>

	<!--is a list of resource elements that each describe what and where to 
	include files associated with this project-->
	<resources>
	  <!--this resource is the log4j properties file that has to be included within
	  the jar-->
	  <resource>
		<directory>.</directory>
		<includes><include>*.properties</include></includes>
	  </resource>
	</resources>
  </build>
  
  <!--third party repositories. These are repositories other then the maven repository-->
  <repositories>
    <!--the HortonWorks repository-->
	<repository>
      <id>HortonWorks</id>
      <url>http://repo.hortonworks.com/content/repositories/releases/</url>
    </repository>
  </repositories>
  
  <!--The dependencies include all the third party libraries that are used-->
  <dependencies>
  	
	<!--The Hadoop client package includes all the Hadoop code that is needed to 
	create the entire Hadoop environment when executing the program locally. When 
	executing the program on the Hadoop cluster, the packages that are stored on 
	the cluster will be used-->
	<dependency>
  	  <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client</artifactId>
      <version>${hadoop.version}</version>
  	</dependency>
  	
	<!--Ini4j is used for... -->
	<dependency>
  		<groupId>org.ini4j</groupId>
  		<artifactId>ini4j</artifactId>
  		<version>0.5.2</version>
  	</dependency>
  	
	<!--Ini4j is used for... -->
	<dependency>
  		<groupId>org.codehaus.jackson</groupId>
  		<artifactId>jackson-mapper-asl</artifactId>
  		<version>1.9.13</version>
  	</dependency>
	
	<!--Ini4j is used for... -->  	
	<dependency>
  		<groupId>org.codehaus.jackson</groupId>
  		<artifactId>jackson-core-asl</artifactId>
  		<version>1.9.13</version>
  	</dependency>
    
	<!--Ini4j is used for... -->
	<dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.4</version>
    </dependency>
    
	<!--Ini4j is used for... -->
	<dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.11</version>
    </dependency>
	
	<!--Ini4j is used for... -->
    <dependency>
        <groupId>junit-addons</groupId>
        <artifactId>junit-addons</artifactId>
        <version>1.4</version>
    </dependency>
    
	<!--Ini4j is used for... -->
	<dependency>
        <groupId>org.apache.mrunit</groupId>
        <artifactId>mrunit</artifactId>
        <version>0.9.0-incubating</version>
        <classifier>hadoop1</classifier>
    </dependency>
    
	<!--Ini4j is used for... -->
	<dependency>
        <groupId>xerces</groupId>
        <artifactId>xercesImpl</artifactId>
        <version>2.9.1</version>
    </dependency>
    
	<!--Ini4j is used for... -->
	<dependency>
        <groupId>xalan</groupId>
        <artifactId>xalan</artifactId>
        <version>2.7.1</version>
    </dependency>
    
	<!--Ini4j is used for... -->
	<dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.3.2</version>
    </dependency>
    
	<!--Ini4j is used for... -->
	<dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>1.2</version>
    </dependency>
    
	<!--Ini4j is used for... -->
	<dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.2</version>
    </dependency>
  
  </dependencies>
</project>
